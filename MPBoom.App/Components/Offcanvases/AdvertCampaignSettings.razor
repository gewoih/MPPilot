@using MPBoom.App.Components.ConfirmDialogs;
@using MPBoom.App.Domain.Utils;
@using MPBoom.Core.Enums;
@using MPBoom.Core.Models;
@using System.Reflection;

<ConfirmDialog @ref="_updateDialog" />

<Tabs @ref="_tabs">
    <Tab Title="Параметры РК">
        <Content>
            <EditForm Model="@_changedAdvertCampaign" class="form-check-inline" OnSubmit="@(async () => await SaveChanges())">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="form-group">
                    <label>Название кампании:</label>
                    <InputText onblur="@OnAdvertCampaignChanged" class="form-control" @bind-Value="_changedAdvertCampaign.Name" />

                    <label>Ключевая фраза:</label>
                    <InputText onblur="@OnAdvertCampaignChanged" class="form-control" @bind-Value="_changedAdvertCampaign.Keyword" />

                    <label>Состояние:</label>
                    <InputSelect onblur="@OnAdvertCampaignChanged" class="form-control" @bind-Value="_changedAdvertCampaign.Status">
                        @foreach (var status in Enum.GetValues<AdvertCampaignStatus>())
                        {
                            <option value="@status">@(status.GetDescription())</option>
                        }
                    </InputSelect>
                </div>

                <div style="padding-top: 5px">
                    <button type="submit" class="btn btn-primary" disabled="@(!_updatedProperties.Any())">Сохранить</button>
                </div>
            </EditForm>
        </Content>
    </Tab>
    <Tab Title="Автобиддер">
        <Content>
        </Content>
    </Tab>
</Tabs>

@code {
    [Parameter] 
    public AdvertCampaign AdvertCampaign { get; set; }

    private ConfirmDialog _updateDialog;
    private AdvertCampaign _changedAdvertCampaign { get; set; }
    private List<PropertyInfo> _updatedProperties { get; set; }
    private Tabs _tabs = default!;

    protected override void OnInitialized()
    {
        _changedAdvertCampaign = AdvertCampaign.GetDeepCopy();
        _updatedProperties = new();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await _tabs.ShowTabByIndexAsync(0);
    }

    private async Task SaveChanges()
    {
        var parameters = new Dictionary<string, object>();
        parameters.Add("OldCampaign", AdvertCampaign);
        parameters.Add("NewCampaign", _changedAdvertCampaign);
        parameters.Add("UpdatedProperties", _updatedProperties);

        var confirmation = await _updateDialog.ShowAsync<UpdateAdvertCampaign>("Подтвердите обновление РК", parameters);
    }

    private async Task OnAdvertCampaignChanged()
    {
        _updatedProperties = AdvertCampaign.GetPropertiesDifference(_changedAdvertCampaign);
    }
}