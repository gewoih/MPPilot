@page "/settings"

@using MPBoom.App.Domain.Interfaces;
@using MPBoom.App.Domain.Models;
@using Newtonsoft.Json;

@inject ILocalStorageService _localStorageService;

<h3>Настройки личного кабинета</h3>

<Toasts class="p-3" Messages="_notifications" AutoHide="true" Placement="ToastsPlacement.TopRight" />

<EditForm Model="@_userSettings" class="form-check-inline" OnSubmit="@(async () => await SaveSettings())">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="form-group">
		<label>Ваш API-ключ для Wildberries:</label>
		<InputText type="password" 
			required="true" 
			placeholder="Введите ваш ключ" 
			class="form-control" 
			oninvalid="this.setCustomValidity('Введите корректный ключ')"
			oninput="setCustomValidity('')" @bind-Value="_userSettings.WildberriesApiKey" />
	</div>

	<div style="padding-top: 5px">
		<button type="submit" class="btn btn-primary">Сохранить</button>
	</div>
</EditForm>

@code {
	private List<ToastMessage> _notifications = new List<ToastMessage>();
	private UserSettings _userSettings = new();

	private async Task SaveSettings()
	{
		var notification = new ToastMessage { AutoHide = true, Title = "Уведомление от MPBoom", Type = ToastType.Success };
		try
		{
			var serializedSettings = JsonConvert.SerializeObject(_userSettings);
			await _localStorageService.SetItem("userSettings", serializedSettings);

			notification.Message = "Настройки успешно сохранены.";
		}
		catch (Exception)
		{
			notification.Type = ToastType.Danger;
			notification.Message = "Произошла ошибка при сохранении настроек!";
		}

		_notifications.Add(notification);
	}
}
